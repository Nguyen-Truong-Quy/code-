@model ThucHanhLanCuoi.Models.Product
@using ThucHanhLanCuoi.Models;
<<div class="form-group">
    @*@Html.LabelFor(model => model.CategoryID, "CategoryID", htmlAttributes: new { @class = "control-label col-md-2" })*@
    <div class="control-label col-md-2 mg-top">
        Loại Sản phẩm
    </div>

    <div class="col-md-10 mg-top">
        @Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
    </div>
</div>



<div class="form-group">
    @*@Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })*@
    <div class="control-label col-md-2 mg-top">
        Tên Sản Phẩm
    </div>

    <div class="col-md-10 mg-top">
        @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
    </div>
</div>




<div class="form-group">
    @*@Html.LabelFor(model => model.ProductDescription, htmlAttributes: new { @class = "control-label col-md-2" })*@
    <div class="control-label col-md-2 mg-top">
        Mô tả Sản Phẩm
    </div>


    <div class="col-md-10 mg-top">
        @Html.TextAreaFor(model => model.ProductDescription, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ProductDescription, "", new { @class = "text-danger" })
    </div>
</div>




<div class="form-group">
    @*@Html.LabelFor(model => model.ProductPrice, htmlAttributes: new { @class = "control-label col-md-2" })*@
    <div class="control-label col-md-2 mg-top">
        Giá Sản phẩm
    </div>

    <div class="col-md-10 mg-top">
        @Html.EditorFor(model => model.ProductPrice, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ProductPrice, "", new { @class = "text-danger" })
    </div>
</div>



<div class="form-group">
    @*@Html.LabelFor(model => model.ProductImage, htmlAttributes: new { @class = "control-label col-md-2" })*@
    <div class="control-label col-md-2 mg-top">
        Hình ảnh Sản Phẩm
    </div>


    <div class="col-md-10 mg-top">
        @Html.EditorFor(model => model.ProductImage, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ProductImage, "", new { @class = "text-danger" })
    </div>
</div>






<div class="form-group">
    <div class="col-md-offset-2 col-md-10" style="padding-top:30px">
        <input type="submit" value="Lưu" class="btn btn-outline-success" />
        @Html.ActionLink("Quay lại danh sách", "Index", null, new { @class = "btn btn-outline-success btn-md" })
    </div>
</div>
<!-- Thêm JavaScript để cập nhật ảnh khi người dùng thay đổi link -->
<script type="text/javascript">
    // Lắng nghe sự thay đổi của trường hình ảnh
    document.getElementById('productImageInput').addEventListener('input', function () {
        var imageUrl = this.value;  // Lấy giá trị đường dẫn hình ảnh
        var imagePreview = document.getElementById('productImagePreview');  // Đối tượng ảnh hiển thị

        // Kiểm tra nếu URL hợp lệ
        if (imageUrl) {
            imagePreview.src = imageUrl;  // Cập nhật nguồn ảnh
            imagePreview.style.display = 'block';  // Hiển thị ảnh
        } else {
            imagePreview.style.display = 'none';  // Nếu không có URL, ẩn ảnh
        }
    });
         type="text/javascript">
        $(document).ready(function () { 
            $('#ProductPrice').on('input', function () {
                var inputValue = $(this).val().replace(/,/g, ''); // Loại bỏ các dấu phẩy hiện có
                if ($.isNumeric(inputValue)) {
                    $(this).val(inputValue.replace(/\B(?=(\d{3})+(?!\d))/g, ","));
                }
            });
    });

</script>
